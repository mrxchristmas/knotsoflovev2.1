@use 'sass:math';

$utilities: (
  "padding": (
    "prefix": "p",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-left": (
    "prefix": "pl",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-right": (
    "prefix": "pr",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-top": (
    "prefix": "pt",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-bottom": (
    "prefix": "pb",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "margin": (
    "prefix": "m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-left": (
    "prefix": "ml",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-right": (
    "prefix": "mr",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-top": (
    "prefix": "mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-bottom": (
    "prefix": "mb",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),

  "opacity": (
    "prefix": "o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    )
  ),
  "display": (
    "prefix": "display",
    "values": (
      "n": none,
      "b": block,
      "f": flex,
      "i": inline,
      "i-b": inline-block
    )
  ),
  "cursor": (
    "prefix": "cur",
    "values": (
      "pointer" : pointer,
      "grab" : grab,
      "grabbing" : grabbing,
      "help" : help,
      "move" : move,
      "not-allowed" : not-allowed
    )
  ),
  "font-size": (
    "prefix": "fs",
    "values": (
      "1": $font-size-sm,
      "2": $base-font-size,
      "3": $font-size-lg,
      "4": $font-size-xl,
      "5": $font-size-xxl
    )
  ),
  "letter-spacing": (
    "prefix": "text-space",
    "values": (
      "1" : 0.1rem,
      "2" : 0.2rem,
      "3" : 0.3rem,
      "4" : 0.5rem,
      "5" : 0.7rem
    )
  ),
  "line-height": (
    "prefix": "text-lh",
    "values": (
      "1" : 1.5rem,
      "2" : 1.7rem,
      "3" : 2rem,
      "4" : 2.2rem,
      "5" : 2.7rem
    )
  ),
  "text-align": (
    "prefix": "text-align",
    "values": (
      "center" : center,
      "end" : end,
      "start" : start
    )
  ),
  "transition": (
    "prefix": "trans",
    "values": (
      "1" : all 0.5s,
      "2" : all 1s,
      "3" : all 1.5s,
      "4" : all 2s,
      "5" : all 2.5s,
    )
  ),
  "box-shadow": (
    "prefix": "shadow",
    "values": (
      "1" : 1px 3px 5px rgba(0, 0, 0, 0.1),
      "2" : 2px 3px 5px rgba(0, 0, 0, 0.1),
      "3" : 3px 3px 5px rgba(0, 0, 0, 0.1),
      "4" : 4px 3px 5px rgba(0, 0, 0, 0.1),
      "5" : 5px 3px 5px rgba(0, 0, 0, 0.1),
    )
  ),
  "position": (
    "prefix": "pos",
    "values": (
      "relative" : relative,
      "absolute" : absolute,
      "fixed" : fixed,
      "static" : static,
      "sticky" : sticky,
    )
  ),
  
  
  
  

);


// generate more padding classes
  

$pv: (
  0: 0,
  1: $base-padding,
  2: $base-padding * 2,
  3: $base-padding * 4,
  4: $base-padding * 6,
  5: $base-padding * 8
);


  // double 
@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
    .p-#{$i}-#{$k}{
      // @debug "i: #{$i}, l: #{$k}, #{map-get($pv, $i)} #{map-get($pv, $k)}";
      padding: map-get($pv, $i) map-get($pv, $k);
    }
    // @debug "padding: #{map-get($pv, $i)}, #{map-get($pv, $k)}; .p-#{$i}-#{$k}";

  }

}

// quad 
@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
    @for $l from 0 to 6 {
  
      @for $m from 0 to 6 {
      
        .p-#{$i}-#{$k}-#{$l}-#{$m} {
          padding: map-get($pv, $i) map-get($pv, $k) map-get($pv, $l) map-get($pv, $m);
        }
        // @debug "padding: #{map-get($pv, $i) map-get($pv, $k) map-get($pv, $l) map-get($pv, $m)}; ";
      }
    
    }

  }

}




// generate more margin classes
  

$pv: (
  0: 0,
  1: $base-margin,
  2: $base-margin * 2,
  3: $base-margin * 4,
  4: $base-margin * 6,
  5: $base-margin * 8
);


  // double 
@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
    .m-#{$i}-#{$k}{
      // @debug "i: #{$i}, l: #{$k}, #{map-get($pv, $i)} #{map-get($pv, $k)}";
      margin: map-get($pv, $i) map-get($pv, $k);
    }
    // @debug "padding: #{map-get($pv, $i)}, #{map-get($pv, $k)}; .p-#{$i}-#{$k}";

  }

}

// quad 
@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
    @for $l from 0 to 6 {
  
      @for $m from 0 to 6 {
      
        .m-#{$i}-#{$k}-#{$l}-#{$m}{
          margin: map-get($pv, $i) map-get($pv, $k) map-get($pv, $l) map-get($pv, $m);
        }
    
      }
    
    }

  }

}









// generate width classes
$i: 0;
@while $i <= 100 {
  .w-#{$i}{
    width: $i * 1%;
    // max-width: $i * 1%;
    // @debug $i * 1%;
  }
  $i: $i + 5;
}
$m: 1;
@for $m from 1 to 9 {
  .w-#{$m}{
    width: $m * 0.75rem;
  }
}

// generate height classes
$h: 0;
@while $h <= 100 {
  .h-#{$h}{
    height: $h * 1%;
    // max-width: $h * 1%;
    // @debug $h * 1%;
  }
  $h: $h + 10;
}

$l: 1;
@for $l from 1 to 9 {
  .h-#{$l}{
    height: $l * 0.75rem;
  }
}


// TEXT CLASSES

.text-straight{
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

  //text align
// $text-align: (
//   "center" : center,
//   "end" : end,
//   "start" : start
// );

// @each $key, $val in $text-align {
//   .text-align-#{$key}{
//     text-align: $val;
//   }
// }


// straight text



  // // letter-spacing
  // $text-spacing: (
  //   "1" : 0.1rem,
  //   "2" : 0.2rem,
  //   "3" : 0.3rem,
  //   "4" : 0.5rem,
  //   "5" : 0.7rem
  // );
  // @each $key, $val in $text-spacing {
  //   .text-space-#{$key}{
  //     letter-spacing: $val;
  //   }
  // }

  // line height
  $text-spacing: (
    "1" : 0.1rem,
    "2" : 0.2rem,
    "3" : 0.3rem,
    "4" : 0.5rem,
    "5" : 0.7rem
  );
  @each $key, $val in $text-spacing {
    .text-space-#{$key}{
      letter-spacing: $val;
    }
  }


// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    @if($k == "default") {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k}{
        #{$property}: $v;
      }
    }
  }
}


$transform-scale: (
  "0" : 1,
  "1" : 1.2,
  "2" : 1.5,
  "3" : 1.7,
  "4" : 2,
  "5" : 2.5,
);


@each $key, $val in $transform-scale {

  .trans-scale-#{$key}{
    transform: scale($val);
  }

  .trans-scale-hover-#{$key}{
    &:hover{
      transform: scale($val);
    }
  }
  
}


// text-shadow  

@for $i from 0 to 6 {
    .text-shadow-#{$i}{
      // @debug "i: #{$i}, l: #{$k}, #{map-get($pv, $i)} #{map-get($pv, $k)}";
      text-shadow: ($i * 1px) ($i * 1px) rgba(0, 0, 0, 0.5);
    }
}

@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
      .text-shadow-#{$i}-#{$k}{
        // @debug "i: #{$i}, l: #{$k}, #{map-get($pv, $i)} #{map-get($pv, $k)}";
        text-shadow: ($i * 1px) ($k * 1px) rgba(0, 0, 0, 0.5);
      }

  }

}

@for $i from 0 to 6 {
  
  @for $k from 0 to 6 {
  
    @each $key, $val in $colors {
      
      .text-shadow-#{$i}-#{$k}-#{$key}{

        text-shadow: ($i * 1px) ($k * 1px) $val;

      }

    }
  }

}

