$catnums: (
  "0" : 0 ,
  "45" : 45 ,
  "90" : 90 ,
  "135" : 135 ,
  "180" : 180 ,
  "225" : 225 ,
  "270" : 270 ,
  "315" : 315 
);
$ee: 100;
$circleDistance: 240px;



@for $i from 0 through 11 {
    @if $i % 2 == 0 {  //use $i for calculating mod here than #{$i}
        .homecat-container .center#{$i}{
            position: absolute;
            width: $ee + (20 * ( $i * $i )) + 1px;
            height: $ee + (20 * ( $i * $i )) + 1px;
            background-color: #e7b0684e;
            border-radius: 50%;
        }
    } 
    @if $i % 2 == 1 {  //use $i for calculating mod here than #{$i}
        .homecat-container .center#{$i}{
            position: absolute;
            width: $ee + (20 * ( $i * $i )) + 1px;
            height: $ee + (20 * ( $i * $i )) + 1px;
            background-color: #f4d1a3;
            border-radius: 50%;
        }
    } 
    
}

@include sm{
    $circleDistance: 150px;
    @each $key, $val in $catnums {
        @keyframes rotate#{$key} {
            0% {
                transform:rotate($val + 1deg) translate($circleDistance) rotate(-$val - 1deg);
            }
            25% {
                transform:rotate($val + 91deg) translate($circleDistance) rotate(-$val - 91deg);
            }
            50% {
                transform:rotate($val + 181deg) translate($circleDistance) rotate(-$val - 181deg);
            }
            75% {
                transform:rotate($val + 271deg) translate($circleDistance) rotate(-$val - 271deg);
            }
            100% {
                transform:rotate($val + 361deg) translate($circleDistance) rotate(-$val - 361deg);
            }
        }
    
        @if($val > 1){
            .deg-#{$key} {
                animation: rotate#{$key} 30s ease-in-out infinite;
                transform:rotate($val + 1px) translate($circleDistance) rotate(-$val - 1px);
            }
        }
        @if($val == 0){
            .deg-#{$key} {
                animation: rotate#{$key} 30s ease-in-out infinite;
                transform:translate($circleDistance);
            }
        }
    
    }
}

@include lg{
    $circleDistance: 240px;
    @each $key, $val in $catnums {
        @keyframes rotate#{$key} {
            0% {
                transform:rotate($val + 1deg) translate($circleDistance) rotate(-$val - 1deg);
            }
            25% {
                transform:rotate($val + 91deg) translate($circleDistance) rotate(-$val - 91deg);
            }
            50% {
                transform:rotate($val + 181deg) translate($circleDistance) rotate(-$val - 181deg);
            }
            75% {
                transform:rotate($val + 271deg) translate($circleDistance) rotate(-$val - 271deg);
            }
            100% {
                transform:rotate($val + 361deg) translate($circleDistance) rotate(-$val - 361deg);
            }
        }
    
        @if($val > 1){
            .deg-#{$key} {
                animation: rotate#{$key} 30s ease-in-out infinite;
                transform:rotate($val + 1px) translate($circleDistance) rotate(-$val - 1px);
            }
        }
        @if($val == 0){
            .deg-#{$key} {
                animation: rotate#{$key} 30s ease-in-out infinite;
                transform:translate($circleDistance);
            }
        }
    
    }
}
